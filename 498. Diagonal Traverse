class Solution {
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& mat) {
        int m = mat.size();
        int n = mat[0].size();
        int row , col ;
        vector<int> result;
        result.reserve(m * n);

        int totaldigonal = m+n-1 ;
        
        for(int i =0 ; i<totaldigonal ; i++ ){
            if(i%2==0){
                if(i<m){
                    row = i ;
                    col = 0 ; 
                }
                else {
                    row = m-1 ; 
                    col = i-(m-1) ;
                }
                while(row >= 0 && col<n){
                    result.push_back(mat[row][col]) ; 
                    row-- ; 
                    col++ ; 
                }
            }
            else {
                if(i<n){
                    row = 0 ; 
                    col = i ; 
                } 
                else {
                    row = i-(n-1) ; 
                    col = n-1 ; 
                }

                while(row < m && col>=0){
                    result.push_back(mat[row][col]) ; 
                    row++ ; 
                    col-- ; 
                }
            }
        }
        return result ; 
    }
};

Time Complexity = O(M*N) ; 
Space Complexity = O(1) ; 
